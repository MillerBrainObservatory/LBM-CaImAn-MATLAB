selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/Image_registration\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Registrator_Demo2.png/320px-Registrator_Demo2.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>Image registration</b> is the process of transforming different sets of data into one coordinate system. Data may be multiple photographs, data from different sensors, times, depths, or viewpoints. It is used in computer vision, medical imaging, military automatic target recognition, and compiling and analyzing images and data from satellites. Registration is necessary in order to be able to compare or integrate the data obtained from these different measurements.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Image_registration#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Registrator_Demo2.png/320px-Registrator_Demo2.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>Image registration</b> is the process of transforming different sets of data into one coordinate system. Data may be multiple photographs, data from different sensors, times, depths, or viewpoints. It is used in computer vision, medical imaging, military automatic target recognition, and compiling and analyzing images and data from satellites. Registration is necessary in order to be able to compare or integrate the data obtained from these different measurements.</p>", "a[href=\"#registration\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2. </span>Registration<a class=\"headerlink\" href=\"#registration\" title=\"Permalink to this heading\">#</a></h1><p>We use <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Image_registration\">image registration</a> to make sure that our neuron in the first frame is in the same spatial location as in frame N throughout the time-series.</p>", "a[href=\"../api/utility.html#read_plane\"]": "<dt class=\"sig sig-object mat\" id=\"read_plane\">\n<span class=\"sig-name descname\"><span class=\"pre\">read_plane</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">path</span></em>, <em class=\"sig-param\"><span class=\"pre\">ds</span></em>, <em class=\"sig-param\"><span class=\"pre\">varargin</span></em><span class=\"sig-paren\">)</span></dt><dd><p>Read a specific plane from an HDF5 or MAT file and return the data. If\ninput is a MAT file, a matfile object is returned.</p><p class=\"rubric\">Notes</p><p>This function interactively prompts the user for input if any required\nparameter is not provided. It handles various errors and prompts the\nuser again for correct input.</p><p class=\"rubric\">Examples</p></dd>", "a[href=\"#outputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.5. </span>Outputs<a class=\"headerlink\" href=\"#outputs\" title=\"Permalink to this heading\">#</a></h2><p>Just like <a class=\"reference internal\" href=\"assembly.html#extraction-inputs\"><span class=\"std std-ref\">assembly outputs</span></a>, registration outputs to <code class=\"code docutils literal notranslate\"><span class=\"pre\">.h5</span></code> format.</p><p>Registration outputs have the following groups:</p>", "a[href=\"assembly.html#extraction-inputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.2. </span>Inputs<a class=\"headerlink\" href=\"#inputs\" title=\"Permalink to this heading\">#</a></h2><p>This example follows a directory structure shown in <a class=\"reference internal\" href=\"../first_steps/setup.html#directory-structure\"><span class=\"std std-ref\">the first steps guide</span></a>.</p><p>Inputs and outputs can be anywhere you wish so long as you have read/write permissions.</p>", "a[href=\"#inputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.2. </span>Inputs<a class=\"headerlink\" href=\"#inputs\" title=\"Permalink to this heading\">#</a></h2><p>In addition to the default function inputs described in section <a class=\"reference internal\" href=\"../first_steps/overview.html#parameters\"><span class=\"std std-ref\">Core Parameters</span></a>, registration has a few important additional parameters.</p><p><code class=\"code docutils literal notranslate\"><span class=\"pre\">start_plane</span></code>\n: The plane to start registration.</p>", "a[href=\"../glossary.html#term-pixel-resolution\"]": "<dt id=\"term-pixel-resolution\">pixel-resolution</dt><dd><p>The length of each pixel, in micron (px/um).</p></dd>", "a[href=\"#non-rigid-registration\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.4. </span>Non-rigid Registration<a class=\"headerlink\" href=\"#non-rigid-registration\" title=\"Permalink to this heading\">#</a></h2><p>To perform non-rigid registration, you must specify the size of the patches you want to split the FOV into.</p><p>Typical patch sizes for <span class=\"math notranslate nohighlight\">\\(512x512\\)</span> movies are <span class=\"math notranslate nohighlight\">\\(32x32\\)</span>, which would lead to <span class=\"math notranslate nohighlight\">\\(512/32=16\\)</span> blocks that will be motion-corrected in parallel.</p>", "a[href=\"../tutorials/registration_tutorial.html#tut-rigid\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.1.1. </span>Rigid<a class=\"headerlink\" href=\"#rigid\" title=\"Permalink to this heading\">#</a></h3><p><a class=\"reference internal\" href=\"../glossary.html#term-Rigid-registration\"><span class=\"xref std std-term\">Rigid motion</span></a></p><p>Rigid motion\n: The object is moved with its shape and size preserved.</p>", "a[href=\"#normcorre-parameters\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.2.1. </span>NoRMCorre Parameters<a class=\"headerlink\" href=\"#normcorre-parameters\" title=\"Permalink to this heading\">#</a></h3><p>The last parameter for this step is a NoRMCorre parameters object.\nThis is just a <a class=\"reference external\" href=\"https://www.mathworks.com/help/matlab/ref/struct.html\">MATLAB structured array</a> that expects specific values.</p><p>NoRMCorre provides the algorithm for registration and dictates the values in that struct.</p>", "a[href=\"../tutorials/registration_tutorial.html#tut-types-of-reg\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.1. </span>Types of Registration<a class=\"headerlink\" href=\"#types-of-registration\" title=\"Permalink to this heading\">#</a></h2><p><a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Image_registration\">Image registration</a> can often improve the quality of cellular traces obtained during the later segmentation step.</p><p>The motion artifacts present in a 3D timeseries come in two flavors, <code class=\"docutils literal notranslate\"><span class=\"pre\">rigid</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">non-rigid</span></code>.</p>", "a[href=\"#overview\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.1. </span>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this heading\">#</a></h2><p>Disturbances or movement in our timeseries cause variations in pixel locations between frames called <strong>motion artifacts</strong>.</p><p>The motion artifacts present in our sample come in two flavors, <code class=\"docutils literal notranslate\"><span class=\"pre\">rigid</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">non-rigid</span></code>. See <a class=\"reference internal\" href=\"../tutorials/registration_tutorial.html#tut-types-of-reg\"><span class=\"std std-ref\">Types of Registration</span></a> for more information.</p>", "a[href=\"../first_steps/overview.html#parameters\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Core Parameters<a class=\"headerlink\" href=\"#core-parameters\" title=\"Permalink to this heading\">#</a></h2><p>For the <a class=\"reference internal\" href=\"../api/core.html#core-api\"><span class=\"std std-ref\">Core</span></a> functions in this pipeline, the initial parameters are always the same.</p>", "a[href=\"assembly.html#scan-phase\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">1.2.1. </span>Scan Phase<a class=\"headerlink\" href=\"#scan-phase\" title=\"Permalink to this heading\">#</a></h3><p>In addition to the standard parameters, users should be aware of the implications that bidirectional scan offset correction has on your dataset.</p><p>The <code class=\"code docutils literal notranslate\"><span class=\"pre\">fix_scan_phase</span></code> parameter attempts to maximize the phase-correlation between each line (row) of each vertically concatenated strip.</p>", "a[href=\"#validate-outputs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.6. </span>Validate Outputs<a class=\"headerlink\" href=\"#validate-outputs\" title=\"Permalink to this heading\">#</a></h2><p>Validation metric figures are placed in your <code class=\"docutils literal notranslate\"><span class=\"pre\">save_path</span></code> as <code class=\"docutils literal notranslate\"><span class=\"pre\">figures/registration_metrics_plane_N</span></code>.</p>", "a[href=\"#rigid-registration\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">2.3. </span>Rigid Registration<a class=\"headerlink\" href=\"#rigid-registration\" title=\"Permalink to this heading\">#</a></h2><p>Rigid registration is accomplished by giving NoRMCorre <strong>no variable for <code class=\"code docutils literal notranslate\"><span class=\"pre\">grid_size</span></code></strong>,\nso it defaults to the size of your image and thus only processing a single patch encompassing the entire field-of-view.</p>", "a[href=\"../first_steps/overview.html#ds\"]": "<p id=\"ds\"><code class=\"code docutils literal notranslate\"><span class=\"pre\">ds</span></code>\n: Dataset name/group path, a character or string (\u2019\u2019 or \u201c\u201d) array beginning with a foreward slash \u2018\u2019. For example, \u2018/Y\u2019, \u201c/mov\u201d, \u2018/raw\u2019.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
